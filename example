#include <WiFi.h>                   //WIFI函式庫
#include <PubSubClient.h>           //MQTT函式庫
char ssid[] = "lysiPhone";        // SSID:設定WIFI名稱      
char pass[] = "66666666";             // 設定wifi密碼
int status  = WL_IDLE_STATUS;         // 此函數會套用在以下的status中，若是連線時則保持連線，若沒連線時，嘗試連線。
char mqttServer[]     = "iiot.ideaschain.com.tw";          // 使用ideaschain作為server
int mqttPort          = 1883;
char clientId[]       = "830346d0-896e-11eb-8e26-2532a0ef1bf0";  // MQTT client ID. 設定一個任意獨一無二的ID
char username[]       = "xfJsQcKkZWGG8mgd05YE";            // device access token(存取權杖)
char password[]       = "";                                // 無須設定
char subscribeTopic[] = "v1/devices/me/telemetry";         //固定路徑，不能修改
char publishTopic[]   = "v1/devices/me/telemetry";         //固定路徑，不能修改(需與subscribeTopic)
String payload_string;
char publishTopicStr1[]= "sensorDist";
char publishPayload[]="{\"sensorDist\":\"30 \"}";
int trigPin =12;
int echoPin =13;

void callback(char *topic, byte *payload, unsigned int length) {//向伺服器接收數據
    Serial.print("Message arrived in topic: ");
    Serial.println(topic);
    Serial.print("Message:");
    for (int i=0; i<length; i++) {
       Serial.print( (char) payload[i]);                 // convert *byte to string
    }
    
    Serial.println();
    Serial.println("-----------------------------------");
}

WiFiClient wifiClient;
PubSubClient client(wifiClient);                                //定義用戶端物件名稱


void publishData( char*publishTopicStr, float sensorValue){

char sensorDist [30];
sprintf (sensorDist ,"{\"%s \":\"%.2f \"}", publishTopicStr,sensorValue);
Serial.println(sensorDist);

while(!client.connected()){
  Serial.println("Attempting MQTT connection Attempt to connect...");
  if(client.connect (clientId, username, password)){
     Serial.println("MQTT connected");
     client.publish(publishTopic,sensorDist);
     client.subscribe(subscribeTopic);
}
  else{
Serial.print("failed rc= ");
Serial.print(client.state());
Serial.println("try again in 5 seconds ");
delay(5000);
}
}
}


void reconnect() {                            // client端連接上MQTT伺服器 必須要有PUB端和SUB端
                                          
  while (!client.connected()) {                             //while(沒有連接上)，則繼續跑迴圈
    Serial.println("Attempting MQTT connection...");     
    if (client.connect(clientId, username, password)) {     // 嘗試連線
      Serial.println("MQTT connected");                     //連線上後發布topic和payload
      client.publish(publishTopic, "payload_string");      
      client.subscribe(subscribeTopic);                     //重新訂閱topic
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");                                    
      delay(5000);                                          //等待5秒重新連接
    }
  }
}


void setup()                     //設定腳位功能及WIFI
{  
  pinMode(trigPin ,OUTPUT);
  pinMode(echoPin ,INPUT);
  while (status != WL_CONNECTED) {              
    Serial.print("Attempting to connect to SSID: ");
    Serial.println(ssid);
    status = WiFi.begin(ssid, pass);    //wifi初始化，連線(名稱,密碼)    
    delay(10000);                       //等待10秒
  }
  printWifiData();
  client.setServer(mqttServer, mqttPort);   
  client.setCallback(callback);
  delay(1500);
}

void printWifiData() {
  IPAddress ip = WiFi.localIP();
  Serial.print("IP Address: ");
  Serial.println(ip);
}

void loop()
{  
  if(!client.connected()){
  reconnect();
  delay(2000);
  }

  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  float duration_us = pulseIn(echoPin, HIGH);//測量pulse發收間隔
  float distance_cm = 0.017 * duration_us;   //把時間轉換成距離
  Serial.print("distance: ");
  Serial.print(distance_cm);
  Serial.println(" cm");
  delay(500);
  if(isnan(duration_us) ){
   Serial.println("Failed to read from sensor!");
   return;
   }
  client.disconnect();
  client.loop();
  delay(300);
  publishData(publishTopicStr1,distance_cm);
  client.loop();
}


  
